/*
 * Copyright 2000-2021 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

sourceCompatibility = 1.5

def jdk5Home = System.getenv("JDK_5")
if (hasProperty("JDK_5")) {
    jdk5Home = JDK_5
}
if (jdk5Home == null) {
    throw new GradleException('JDK_5 environment variable is not defined. It must point to any JDK that ' +
            'is capable to compile with Java 5 target (Any JDK version from 1.5 to 1.8)')
}

def generatedSourcesDir = "${buildDir}/generated/"

sourceSets {
    generated {
        java.srcDir generatedSourcesDir
    }
}

task generateSrc(type: Copy) {
    from project(':common').sourceSets.main.java
    into generatedSourcesDir
    // This filter removes
    // 1. @Target({LOCAL_VARIABLE, TYPE_USE, ANNOTATION_TYPE}) => @Target({LOCAL_VARIABLE,  ANNOTATION_TYPE})
    // 2. @Target({ElementType.LOCAL_VARIABLE, ElementType.TYPE_USE, ElementType.PARAMETER}) => @Target({ElementType.LOCAL_VARIABLE,  ElementType.PARAMETER})
    // 3. @Target({ElementType.FIELD, ElementType.TYPE_USE}) => @Target({ElementType.FIELD, })
    // 4. @Target({ElementType.TYPE_USE, ElementType.FIELD}) => @Target({ ElementType.FIELD})
    filter { line -> line.replaceAll("\\b(ElementType.)?TYPE_USE\\b(\\w*,)?", "") }
}

compileJava {
    options.fork = true
    options.forkOptions.executable = "$jdk5Home/bin/javac"
    dependsOn(generateSrc)
    source sourceSets.generated.java
}

mainJar {
    from sourceSets.main.output
}

sourceJar {
    dependsOn(generateSrc)
    from sourceSets.generated.java
}

javadoc {
    source = [sourceSets.generated.java]
}

